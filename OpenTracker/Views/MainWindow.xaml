<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:OpenTracker.ViewModels;assembly=OpenTracker"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        xmlns:vc="clr-namespace:OpenTracker.ValueConverters;assembly=OpenTracker"
        xmlns:view="clr-namespace:OpenTracker.Views;assembly=OpenTracker"
        xmlns:manager="clr-namespace:Avalonia.ThemeManager;assembly=Avalonia.ThemeManager"
        mc:Ignorable="d" MinWidth="220" MinHeight="61" d:DesignWidth="1280" d:DesignHeight="960"
        x:Class="OpenTracker.Views.MainWindow" x:Name="HostWindow" Closing="OnClose"
        Background="{DynamicResource ThemeBackgroundBrush}" UseLayoutRounding="True"
        Icon="avares://OpenTracker/Assets/triforce.png" Title="OpenTracker">
	
	<Design.DataContext>
		<vm:MainWindowVM />
	</Design.DataContext>
	
	<Window.KeyBindings>
		<KeyBinding Gesture="Ctrl+o" Command="{Binding RelativeSource={RelativeSource Self}, Path=Open}" />
		<KeyBinding Gesture="Ctrl+s" Command="{Binding RelativeSource={RelativeSource Self}, Path=Save}" />
		<KeyBinding Gesture="Ctrl+Shift+s" Command="{Binding RelativeSource={RelativeSource Self}, Path=SaveAs}" />
		<KeyBinding Gesture="Ctrl+z" Command="{Binding Path=UndoCommand}" />
		<KeyBinding Gesture="Ctrl+y" Command="{Binding Path=RedoCommand}" />
		<KeyBinding Gesture="F5" Command="{Binding Path=OpenResetDialog}" />
		<KeyBinding Gesture="F11" Command="{Binding Path=ToggleDisplayAllLocationsCommand}" />
	</Window.KeyBindings>

  <Window.Resources>

    <manager:ObjectEqualityMultiConverter x:Key="ObjectEqualityMultiConverter"/>

    <StackPanel x:Key="HCItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/hc.png" />
      <ContentControl Content="{Binding HCSmallKeys}"
                      IsVisible="{Binding Path=SmallKeyShuffle}"
                      IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <Panel Height="16" Width="16" IsVisible="{Binding Path=BigKeyShuffle}"
             IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl Margin="0,0,6,0" DataContext="{Binding Path=HCItems}" />
    </StackPanel>

    <StackPanel x:Key="ATItems" Grid.Column="1" Orientation="Horizontal" IsVisible="{Binding
                Path=SmallKeyShuffle}" IsHitTestVisible="{Binding Path=SmallKeyShuffle}">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/at.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=ATSmallKeys}" />
      <Panel Height="16" Width="16" IsVisible="{Binding Path=BigKeyShuffle}"
             IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=ATItems}" />
    </StackPanel>
    
    <StackPanel x:Key="EPItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/ep.png" />
      <Panel Margin="2,0,0,0" Height="16" Width="16" IsVisible="{Binding
                 Path=SmallKeyShuffle}" IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=EPBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=EPItems}" />
      <view:PrizeControl DataContext="{Binding Path=EPPrize}" />
      <view:BossControl DataContext="{Binding Path=EPBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="DPItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/dp.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=DPSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=DPBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=DPItems}" />
      <view:PrizeControl DataContext="{Binding Path=DPPrize}" />
      <view:BossControl DataContext="{Binding Path=DPBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="THItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/th.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=THSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=THBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=THItems}" />
      <view:PrizeControl DataContext="{Binding Path=THPrize}" />
      <view:BossControl DataContext="{Binding Path=THBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="PDItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/pd.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=PDSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=PDBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=PDItems}" />
      <view:PrizeControl DataContext="{Binding Path=PDPrize}" />
      <view:BossControl DataContext="{Binding Path=PDBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="SPItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/sp.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=SPSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=SPBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=SPItems}" />
      <view:PrizeControl DataContext="{Binding Path=SPPrize}" />
      <view:BossControl DataContext="{Binding Path=SPBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="SWItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/sw.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=SWSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=SWBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=SWItems}" />
      <view:PrizeControl DataContext="{Binding Path=SWPrize}" />
      <view:BossControl DataContext="{Binding Path=SWBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="TTItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/tt.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=TTSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=TTBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=TTItems}" />
      <view:PrizeControl DataContext="{Binding Path=TTPrize}" />
      <view:BossControl DataContext="{Binding Path=TTBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="IPItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/ip.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=IPSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=IPBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=IPItems}" />
      <view:PrizeControl DataContext="{Binding Path=IPPrize}" />
      <view:BossControl DataContext="{Binding Path=IPBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="MMItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/mm.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=MMSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=MMBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=MMItems}" />
      <view:PrizeControl DataContext="{Binding Path=MMPrize}" />
      <view:BossControl DataContext="{Binding Path=MMBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="TRItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/tr.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=TRSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=TRBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=TRItems}" />
      <view:PrizeControl DataContext="{Binding Path=TRPrize}" />
      <view:BossControl DataContext="{Binding Path=TRBoss}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <StackPanel x:Key="GTItems" Orientation="Horizontal">
      <Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/gt.png" />
      <view:KeyControl Margin="2,0,0,0" DataContext="{Binding Path=GTSmallKeys}"
                       IsVisible="{Binding Path=SmallKeyShuffle}"
                       IsHitTestVisible="{Binding Path=SmallKeyShuffle}" />
      <view:KeyControl DataContext="{Binding Path=GTBigKey}" IsVisible="{Binding
                           Path=BigKeyShuffle}" IsHitTestVisible="{Binding Path=BigKeyShuffle}" />
      <view:DungeonChestControl DataContext="{Binding Path=GTItems}" />
      <view:BossControl DataContext="{Binding Path=GTBoss1}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
      <view:BossControl DataContext="{Binding Path=GTBoss2}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
      <view:BossControl DataContext="{Binding Path=GTBoss3}" IsVisible="{Binding
                            Path=BossShuffle}" IsHitTestVisible="{Binding Path=BossShuffle}" />
    </StackPanel>

    <Panel x:Key="HorizontalDungeonLayout" Margin="6,0,4,0" 
                HorizontalAlignment="Left" VerticalAlignment="Top">
      <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">

        <Grid Margin="0,0,0,8" ColumnDefinitions="*,*" HorizontalAlignment="Stretch"
              VerticalAlignment="Top">
          <ContentControl Grid.Column="0" Content="{DynamicResource HCItems}" />
          <ContentControl Grid.Column="1" Content="{DynamicResource ATItems}" />
        </Grid>

        <ContentControl Content="{DynamicResource EPItems}" />
        <ContentControl Content="{DynamicResource DPItems}" />
        <ContentControl Content="{DynamicResource THItems}" />
        <ContentControl Content="{DynamicResource PDItems}" />
        <ContentControl Content="{DynamicResource SPItems}" />
        <ContentControl Content="{DynamicResource SWItems}" />
        <ContentControl Content="{DynamicResource TTItems}" />
        <ContentControl Content="{DynamicResource IPItems}" />
        <ContentControl Content="{DynamicResource MMItems}" />
        <ContentControl Content="{DynamicResource TRItems}" />
        <ContentControl Content="{DynamicResource GTItems}" />

      </StackPanel>
    </Panel>
    
    <Grid x:Key="VerticalDungeonLayout" ColumnDefinitions="*,*" Margin="0,4,0,0"
          HorizontalAlignment="Stretch" VerticalAlignment="Top">
      
      <StackPanel Grid.Column="0" Margin="3,0">
        <ContentControl Content="{DynamicResource HCItems}" />
        <ContentControl Margin="0,0,0,8" Height="16" Content="{DynamicResource ATItems}" />
        <ContentControl Content="{DynamicResource EPItems}" />
        <ContentControl Content="{DynamicResource DPItems}" />
        <ContentControl Content="{DynamicResource THItems}" Margin="0,0,0,8" />
        <ContentControl Content="{DynamicResource GTItems}" />
      </StackPanel>
      
      <StackPanel Grid.Column="1" Margin="3,0">
        <ContentControl Content="{DynamicResource PDItems}" />
        <ContentControl Content="{DynamicResource SPItems}" />
        <ContentControl Content="{DynamicResource SWItems}" />
        <ContentControl Content="{DynamicResource TTItems}" />
        <ContentControl Content="{DynamicResource IPItems}" />
        <ContentControl Content="{DynamicResource MMItems}" />
        <ContentControl Content="{DynamicResource TRItems}" />
      </StackPanel>

      <StackPanel Grid.Column="1">
        
      </StackPanel>
      
    </Grid>
    
  </Window.Resources>

	<DockPanel>

		<!-- Window MenuBar -->
		<Border Classes="ControlBorder" BorderThickness="0,0,0,1" DockPanel.Dock="Top">
			<Menu Classes="MenuBar">
				
				<MenuItem Classes="Menu" Header="File">
					
					<MenuItem Classes="Menu InnerMenu" Command="{Binding ElementName=HostWindow, Path=Open}">
						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Open..." />
								<TextBlock Margin="10,0,0,0" Text="Ctrl+O" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Command="{Binding ElementName=HostWindow, Path=Save}">
						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Save" />
								<TextBlock Margin="10,0,0,0" Text="Ctrl+S" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Command="{Binding ElementName=HostWindow, Path=SaveAs}">
						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Save As..." />
								<TextBlock Margin="10,0,0,0" Text="Ctrl+Shift+S" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Command="{Binding Path=OpenResetDialog}">
						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Reset" />
								<TextBlock Margin="10,0,0,0" Text="F5" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>
					</MenuItem>

					<Separator />
					<MenuItem Classes="Menu InnerMenu" Command="{Binding ElementName=HostWindow, Path=Close}"
							  Header="Exit" />

				</MenuItem>

				<MenuItem Classes="Menu" Header="Tracking">

					<MenuItem Classes="Menu InnerMenu" Command="{Binding Path=UndoCommand}">
						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Undo" />
								<TextBlock Margin="10,0,0,0" Text="Ctrl+Z" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Command="{Binding Path=RedoCommand}">
						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Redo" />
								<TextBlock Margin="10,0,0,0" Text="Ctrl+Y" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>
					</MenuItem>

					<Separator />
					<MenuItem Classes="Menu InnerMenu" Command="{Binding ElementName=HostWindow, Path=AutoTracker}"
							  Header="AutoTracker..." />

				</MenuItem>

				<MenuItem Classes="Menu" Header="View">

          <MenuItem Classes="Menu InnerMenu" Header="Theme" DataContext="{Binding Path=Selector,
                    ElementName=HostWindow}" Items="{Binding Path=Themes}">
            <MenuItem.Styles>
              <Style Selector="MenuItem">
                <Setter Property="Header" Value="{Binding Name}"/>
                <Setter Property="Command" Value="{Binding ApplyTheme}"/>
                <Setter Property="CommandParameter" Value="{Binding}"/>
                <Setter Property="Icon">
                  <Template>
                    <CheckBox Classes="Menu">
                      <CheckBox.IsChecked>
                        <MultiBinding Mode="OneWay" Converter="{StaticResource ObjectEqualityMultiConverter}">
                          <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                          <Binding Path="Selector.SelectedTheme"/>
                        </MultiBinding>
                      </CheckBox.IsChecked>
                    </CheckBox>
                  </Template>
                </Setter>              </Style>
            </MenuItem.Styles>
          </MenuItem>

          <Separator />
					
					<MenuItem Classes="Menu InnerMenu" Command="{Binding Path=ToggleDisplayAllLocationsCommand}">

						<MenuItem.Icon>
							<CheckBox Classes="Menu" IsChecked="{Binding Path=DisplayAllLocations}" />
						</MenuItem.Icon>

						<MenuItem.Header>
							<Grid ColumnDefinitions="Auto,*,Auto">
								<TextBlock Text="Display All Locations" />
								<TextBlock Margin="10,0,0,0" Text="F11" Grid.Column="2" />
							</Grid>
						</MenuItem.Header>

					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Command="{Binding Path=ToggleShowItemCountsOnMapCommand}"
							  Header="Show Item Counts on Map">

						<MenuItem.Icon>
							<CheckBox Classes="Menu" IsChecked="{Binding Path=ShowItemCountsOnMap}" />
						</MenuItem.Icon>

					</MenuItem>

					<Separator />
					<MenuItem Classes="Menu InnerMenu" Command="{Binding ElementName=HostWindow, Path=ColorSelect}"
							  Header="Change Colors..." />
					<Separator />

					<MenuItem Classes="Menu InnerMenu" Header="Layout Orientation">
						
						<MenuItem Classes="Menu InnerMenu" Header="Dynamic"
								  Command="{Binding Path=SetLayoutOrientationCommand}" CommandParameter="Dynamic">
							<MenuItem.Icon>
								<CheckBox Classes="Menu" IsChecked="{Binding Path=DynamicLayoutOrientation, Mode=OneWay}"
											 Command="{Binding Path=SetLayoutOrientationCommand}" CommandParameter="Dynamic" />
							</MenuItem.Icon>
						</MenuItem>

						<MenuItem Classes="Menu InnerMenu" Header="Horizontal"
								  Command="{Binding Path=SetLayoutOrientationCommand}" CommandParameter="Horizontal">
							<MenuItem.Icon>
								<CheckBox Classes="Menu" IsChecked="{Binding Path=HorizontalLayoutOrientation, Mode=OneWay}"
											 Command="{Binding Path=SetLayoutOrientationCommand}" CommandParameter="Horizontal" />
							</MenuItem.Icon>
						</MenuItem>

						<MenuItem Classes="Menu InnerMenu" Header="Vertical"
								  Command="{Binding Path=SetLayoutOrientationCommand}" CommandParameter="Vertical">
							<MenuItem.Icon>
								<CheckBox Classes="Menu" IsChecked="{Binding Path=VerticalLayoutOrientation, Mode=OneWay}"
											 Command="{Binding Path=SetLayoutOrientationCommand}" CommandParameter="Vertical" />
							</MenuItem.Icon>
						</MenuItem>
						
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Header="Horizontal Orientation">
						
						<MenuItem Classes="Menu InnerMenu" Header="UI Panel Placement">

							<MenuItem Classes="Menu InnerMenu" Header="Top"
									  Command="{Binding Path=SetHorizontalUIPanelPlacementCommand}" CommandParameter="Top">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=TopHorizontalUIPanelPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetHorizontalItemsPlacementCommand}" CommandParameter="Left" />
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Classes="Menu InnerMenu" Header="Bottom"
									  Command="{Binding Path=SetHorizontalUIPanelPlacementCommand}" CommandParameter="Bottom">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=BottomHorizontalUIPanelPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetHorizontalItemsPlacementCommand}" CommandParameter="Right" />
								</MenuItem.Icon>
							</MenuItem>

						</MenuItem>

						<MenuItem Classes="Menu InnerMenu" Header="Items Panel Placement">

							<MenuItem Classes="Menu InnerMenu" Header="Left"
									  Command="{Binding Path=SetHorizontalItemsPlacementCommand}" CommandParameter="Left">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=LeftHorizontalItemsPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetHorizontalItemsPlacementCommand}" CommandParameter="Left" />
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Classes="Menu InnerMenu" Header="Right"
									  Command="{Binding Path=SetHorizontalItemsPlacementCommand}" CommandParameter="Right">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=RightHorizontalItemsPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetHorizontalItemsPlacementCommand}" CommandParameter="Right" />
								</MenuItem.Icon>
							</MenuItem>

						</MenuItem>
					
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Header="Vertical Orientation">

						<MenuItem Classes="Menu InnerMenu" Header="UI Panel Placement">

							<MenuItem Classes="Menu InnerMenu" Header="Left"
									  Command="{Binding Path=SetVerticalUIPanelPlacementCommand}" CommandParameter="Left">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=LeftVerticalUIPanelPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetVerticalUIPanelPlacementCommand}" CommandParameter="Left" />
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Classes="Menu InnerMenu" Header="Right"
									  Command="{Binding Path=SetVerticalUIPanelPlacementCommand}" CommandParameter="Right">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=RightVerticalUIPanelPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetVerticalUIPanelPlacementCommand}" CommandParameter="Right" />
								</MenuItem.Icon>
							</MenuItem>

						</MenuItem>

						<MenuItem Classes="Menu InnerMenu" Header="Items Panel Placement">

							<MenuItem Classes="Menu InnerMenu" Header="Top"
									  Command="{Binding Path=SetVerticalItemsPlacementCommand}" CommandParameter="Top">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=TopVerticalItemsPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetVerticalItemsPlacementCommand}" CommandParameter="Top" />
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Classes="Menu InnerMenu" Header="Bottom"
									  Command="{Binding Path=SetVerticalItemsPlacementCommand}" CommandParameter="Bottom">
								<MenuItem.Icon>
									<CheckBox Classes="Menu" IsChecked="{Binding Path=BottomVerticalItemsPlacement, Mode=OneWay}"
												 Command="{Binding Path=SetVerticalItemsPlacementCommand}" CommandParameter="Bottom" />
								</MenuItem.Icon>
							</MenuItem>

						</MenuItem>
						
					</MenuItem>

					<MenuItem Classes="Menu InnerMenu" Header="Map Orientation">

						<MenuItem Classes="Menu InnerMenu" Header="Dynamic"
								  Command="{Binding Path=SetMapOrientationCommand}" CommandParameter="Dynamic">
							<MenuItem.Icon>
								<CheckBox Classes="Menu" IsChecked="{Binding Path=DynamicMapOrientation, Mode=OneWay}"
											 Command="{Binding Path=SetMapOrientationCommand}" CommandParameter="Dynamic" />
							</MenuItem.Icon>
						</MenuItem>

						<MenuItem Classes="Menu InnerMenu" Header="Horizontal"
								  Command="{Binding Path=SetMapOrientationCommand}" CommandParameter="Horizontal">
							<MenuItem.Icon>
								<CheckBox Classes="Menu" IsChecked="{Binding Path=HorizontalMapOrientation, Mode=OneWay}"
											 Command="{Binding Path=SetMapOrientationCommand}" CommandParameter="Horizontal" />
							</MenuItem.Icon>
						</MenuItem>

						<MenuItem Classes="Menu InnerMenu" Header="Vertical"
								  Command="{Binding Path=SetMapOrientationCommand}" CommandParameter="Vertical">
							<MenuItem.Icon>
								<CheckBox Classes="Menu" IsChecked="{Binding Path=VerticalMapOrientation, Mode=OneWay}"
											 Command="{Binding Path=SetMapOrientationCommand}" CommandParameter="Vertical" />
							</MenuItem.Icon>
						</MenuItem>

					</MenuItem>

				</MenuItem>
				
			</Menu>
		</Border>

		<!-- UI Panels -->
		<DockPanel DockPanel.Dock="{Binding Path=UIPanelDock, Mode=OneWay}" HorizontalAlignment="{Binding 
               Path=UIPanelHorizontalAlignment, Mode=OneWay}" VerticalAlignment="{Binding 
               Path=UIPanelVerticalAlignment, Mode=OneWay}">

			<!-- Items Panel -->
			<Border Classes="ControlBorder" Margin="{Binding Path=ItemsPanelMargin, Mode=OneWay}"
              DockPanel.Dock="{Binding Path=UIPanelOrientationDock, Mode=OneWay}">
				<StackPanel Orientation="Vertical">

					<Border Classes="UIPanelTitle ItemsPanelTitle">
						<Grid ColumnDefinitions="Auto,*,Auto">

							<TextBlock Classes="UIPanelTitleText" Grid.Column="0" Text="Items" />

							<!-- Mode Settings Button and Popup -->
							<Panel Grid.Column="2">
								<Image Source="avares://OpenTracker/Assets/Images/settings.png" PointerReleased="OpenModeSettingsPopup"
									   ToolTip.Tip="Mode Settings" />
								<view:ModeSettingsControl DataContext="{Binding Path=ModeSettings}" />
							</Panel>

						</Grid>
					</Border>

					<Border Classes="UIPanelBody ItemsPanelBody">
						<StackPanel Orientation="{Binding Path=ItemsPanelOrientation}">

							<ItemsControl Items="{Binding Path=Items}">

								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel ItemWidth="34" ItemHeight="40" MaxWidth="238" MaxHeight="200"
												   Orientation="Horizontal" HorizontalAlignment="Left"
												   VerticalAlignment="Top" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>

								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<view:ItemControl />
									</DataTemplate>
								</ItemsControl.ItemTemplate>

							</ItemsControl>

              <ContentControl Name="DungeonItems">
                <i:Interaction.Behaviors>
                  <ia:DataTriggerBehavior Binding="{Binding Path=ItemsPanelHorizontalOrientation}"
                                          ComparisonCondition="Equal" Value="True">
                    <ia:ChangePropertyAction TargetObject="{Binding #DungeonItems}" PropertyName="Content"
                                             Value="{DynamicResource HorizontalDungeonLayout}"/>
                  </ia:DataTriggerBehavior>
                  <ia:DataTriggerBehavior Binding="{Binding Path=ItemsPanelHorizontalOrientation}"
                                          ComparisonCondition="NotEqual" Value="True">
                    <ia:ChangePropertyAction TargetObject="{Binding #DungeonItems}" PropertyName="Content"
                                             Value="{DynamicResource VerticalDungeonLayout}"/>
                  </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
              </ContentControl>

              <!--<Grid Margin="6,0,4,0" ColumnDefinitions="Auto,Auto,Auto,Auto,Auto"
								  RowDefinitions="24,Auto" VerticalAlignment="Top" HorizontalAlignment="Left">

								<StackPanel Orientation="Horizontal" IsHitTestVisible="{Binding Path=SmallKeyShuffle}"
											IsVisible="{Binding Path=SmallKeyShuffle}" Grid.Column="0" Grid.ColumnSpan="5"
											VerticalAlignment="Top">

									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/hc.png" />

									<ItemsControl Items="{Binding Path=HCItems}">

										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<Panel Height="16" Width="16" Margin="2,0,1,0" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>

										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<view:KeyControl />
											</DataTemplate>
										</ItemsControl.ItemTemplate>

									</ItemsControl>

									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/at.png" />

									<ItemsControl Items="{Binding Path=ATItems}">

										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<Panel Height="16" Width="16" Margin="2,0,0,0" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>

										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<view:KeyControl />
											</DataTemplate>
										</ItemsControl.ItemTemplate>

									</ItemsControl>

								</StackPanel>

								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left"
											Margin="0,0,2,0">
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/ep.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/dp.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/th.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/pd.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/sp.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/sw.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/tt.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/ip.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/mm.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/tr.png" />
									<Image Classes="DungeonLabel" Source="avares://OpenTracker/Assets/Images/gt.png"
										   IsHitTestVisible="{Binding Path=SmallKeyShuffle}"
										   IsVisible="{Binding Path=SmallKeyShuffle}" />
								</StackPanel>

								<ItemsControl Grid.Column="1" Grid.Row="1" Items="{Binding Path=SmallKeyItems}"
											  HorizontalAlignment="Left" VerticalAlignment="Top"
											  IsHitTestVisible="{Binding Path=SmallKeyShuffle}"
											  IsVisible="{Binding Path=SmallKeyShuffle}">

									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Width="16" Orientation="Vertical" />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>

									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<view:KeyControl />
										</DataTemplate>
									</ItemsControl.ItemTemplate>

								</ItemsControl>

								<ItemsControl Grid.Column="2" Grid.Row="1" Items="{Binding Path=BigKeyItems}"
											  HorizontalAlignment="Left" VerticalAlignment="Top"
											  IsHitTestVisible="{Binding Path=BigKeyShuffle}"
											  IsVisible="{Binding Path=BigKeyShuffle}">

									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Width="16" Orientation="Vertical" />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>

									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<view:KeyControl />
										</DataTemplate>
									</ItemsControl.ItemTemplate>

								</ItemsControl>

								<ItemsControl Grid.Column="3" Grid.Row="1" Items="{Binding Path=Prizes}"
											  HorizontalAlignment="Left" VerticalAlignment="Top">

									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Width="16" Orientation="Vertical" />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>

									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<view:PrizeControl />
										</DataTemplate>
									</ItemsControl.ItemTemplate>

								</ItemsControl>

								<ItemsControl Grid.Column="4" Grid.Row="1" Items="{Binding Path=Bosses}"
											  HorizontalAlignment="Left" VerticalAlignment="Top">

									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Width="16" Orientation="Vertical" IsHitTestVisible="{Binding
													Path=BossShuffle}" IsVisible="{Binding Path=BossShuffle}" />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>

									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<view:BossControl />
										</DataTemplate>
									</ItemsControl.ItemTemplate>

								</ItemsControl>

							</Grid> -->

						</StackPanel>
					</Border>

				</StackPanel>
			</Border>

			<!-- Locations Panel -->
			<Border Classes="ControlBorder" Margin="{Binding Path=LocationsPanelMargin, Mode=OneWay}">
				<Grid RowDefinitions="Auto, *" VerticalAlignment="Stretch">

					<Border Classes="UIPanelTitle LocationsPanelTitle" Grid.Row="0">
						<TextBlock Classes="UIPanelTitleText" Text="Locations" />
					</Border>

					<Border Classes="UIPanelBody LocationsPanelBody" Grid.Row="1">
						<ItemsControl Items="{Binding Path=Locations}">

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<WrapPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=view:MainWindow},
										   Path=DataContext.LocationsPanelOrientation, Mode=OneWay}" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<view:LocationControl Margin="1" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>

						</ItemsControl>
					</Border>

				</Grid>
			</Border>
		
		</DockPanel>

		<!-- Map Area -->
		<Panel>
			<Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Panel>

          <ItemsControl x:Name="MapItemsControl" Items="{Binding Path=Maps}">

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=view:MainWindow},
										Path=DataContext.MapPanelOrientation, Mode=OneWay}" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:MapControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

          <ItemsControl Items="{Binding Path=Connectors}">

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Panel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:ConnectorControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

          <ItemsControl Classes="Canvas" Items="{Binding Path=MapLocations}">
            <ItemsControl.Styles>
              <Style Selector="ItemsControl.Canvas > ContentPresenter">
                <Setter Property="Canvas.Left" Value="{Binding Path=CanvasX}" />
                <Setter Property="Canvas.Top" Value="{Binding Path=CanvasY}" />
              </Style>
            </ItemsControl.Styles>

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:MapLocationControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

          <ItemsControl Classes="Canvas" Items="{Binding Path=MapEntrances}">
            <ItemsControl.Styles>
              <Style Selector="ItemsControl.Canvas > ContentPresenter">
                <Setter Property="Canvas.Left" Value="{Binding Path=CanvasX}" />
                <Setter Property="Canvas.Top" Value="{Binding Path=CanvasY}" />
              </Style>
            </ItemsControl.Styles>

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:MapEntranceControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

        </Panel>
      </Viewbox>
		</Panel>
	
	</DockPanel>

</Window>
