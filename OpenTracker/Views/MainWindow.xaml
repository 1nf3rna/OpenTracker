<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:OpenTracker.ViewModels;assembly=OpenTracker"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        xmlns:vc="clr-namespace:OpenTracker.ValueConverters;assembly=OpenTracker"
        xmlns:view="clr-namespace:OpenTracker.Views;assembly=OpenTracker"
        xmlns:manager="clr-namespace:Avalonia.ThemeManager;assembly=Avalonia.ThemeManager"
        mc:Ignorable="d" d:DesignWidth="1280" d:DesignHeight="960"
        x:Class="OpenTracker.Views.MainWindow" Closing="OnClose"
        Background="{DynamicResource ThemeBackgroundBrush}" UseLayoutRounding="True"
        Icon="avares://OpenTracker/Assets/triforce.png" Title="OpenTracker">
	
	<Design.DataContext>
		<vm:MainWindowVM />
	</Design.DataContext>
	
	<Window.KeyBindings>
		<KeyBinding Gesture="Ctrl+o" Command="{Binding $self.Open}" />
		<KeyBinding Gesture="Ctrl+s" Command="{Binding $self.Save}" />
		<KeyBinding Gesture="Ctrl+Shift+s" Command="{Binding $self.SaveAs}" />
		<KeyBinding Gesture="Ctrl+z" Command="{Binding UndoCommand}" />
		<KeyBinding Gesture="Ctrl+y" Command="{Binding RedoCommand}" />
		<KeyBinding Gesture="F5" Command="{Binding OpenResetDialogCommand}" />
		<KeyBinding Gesture="F11" Command="{Binding ToggleDisplayAllLocationsCommand}" />
	</Window.KeyBindings>

	<DockPanel>

		<!-- Window MenuBar -->
    <ContentControl Content="{Binding TopMenu}" DockPanel.Dock="Top" />

		<!-- UI Panels -->
		<DockPanel DockPanel.Dock="{Binding UIPanelDock, Mode=OneWay}" HorizontalAlignment="{Binding 
               UIPanelHorizontalAlignment, Mode=OneWay}" VerticalAlignment="{Binding 
               UIPanelVerticalAlignment, Mode=OneWay}">

			<!-- Items Panel -->
			<ContentControl Content="{Binding ItemsPanel}" DockPanel.Dock="{Binding
                      UIPanelOrientationDock, Mode=OneWay}" />

			<!-- Locations Panel -->
			<Border Classes="ControlBorder" Margin="{Binding Path=LocationsPanelMargin, Mode=OneWay}">
				<Grid RowDefinitions="Auto, *" VerticalAlignment="Stretch">

					<Border Classes="UIPanelTitle LocationsPanelTitle" Grid.Row="0">
						<TextBlock Classes="UIPanelTitleText" Text="Locations" />
					</Border>

					<Border Classes="UIPanelBody LocationsPanelBody" Grid.Row="1">
						<ItemsControl Items="{Binding Path=Locations}">

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<WrapPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=view:MainWindow},
										   Path=DataContext.LocationsPanelOrientation, Mode=OneWay}" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<view:LocationControl Margin="1" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>

						</ItemsControl>
					</Border>

				</Grid>
			</Border>
		
		</DockPanel>

		<!-- Map Area -->
		<Panel>
			<Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Panel>

          <ItemsControl x:Name="MapItemsControl" Items="{Binding Path=Maps}">

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=view:MainWindow},
										Path=DataContext.MapPanelOrientation, Mode=OneWay}" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:MapControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

          <ItemsControl Items="{Binding Path=Connectors}">

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Panel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:ConnectorControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

          <ItemsControl Classes="Canvas" Items="{Binding Path=MapLocations}">
            <ItemsControl.Styles>
              <Style Selector="ItemsControl.Canvas > ContentPresenter">
                <Setter Property="Canvas.Left" Value="{Binding Path=CanvasX}" />
                <Setter Property="Canvas.Top" Value="{Binding Path=CanvasY}" />
              </Style>
            </ItemsControl.Styles>

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:MapLocationControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

          <ItemsControl Classes="Canvas" Items="{Binding Path=MapEntrances}">
            <ItemsControl.Styles>
              <Style Selector="ItemsControl.Canvas > ContentPresenter">
                <Setter Property="Canvas.Left" Value="{Binding Path=CanvasX}" />
                <Setter Property="Canvas.Top" Value="{Binding Path=CanvasY}" />
              </Style>
            </ItemsControl.Styles>

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <view:MapEntranceControl />
              </DataTemplate>
            </ItemsControl.ItemTemplate>

          </ItemsControl>

        </Panel>
      </Viewbox>
		</Panel>
	
	</DockPanel>

</Window>
